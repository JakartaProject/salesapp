package salesapp.roommybatis.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.type.JdbcType;

import salesapp.roommybatis.entity.PRoom;

public interface PRoomMapperEx extends PRoomMapper {
	@Select({ "<script>", "select * from p_Room", "where Status = 'To be sold' ",
			"<if test='structure != null'> and RoomStru = #{structure} </if>",
			"<if test='areaFrom != null'> and YsBldArea &gt;= #{areaFrom} </if>",
			"<if test='areaTo != null'> and YsBldArea &lt;= #{areaTo} </if>",
			"<if test='priceFrom != null'> and PriceDj &gt;= #{priceFrom} </if>",
			"<if test='priceto != null'> and PriceDj &lt;= #{priceTo} </if>",
			"<if test='totalPriceFrom != null'> and TotalDj &gt;= #{totalPriceFrom} </if>",
			"<if test='totalPriceto != null'> and TotalDj &lt;= #{totalPriceTo} </if>", "</script>" })
	@Results({ @Result(column = "RoomGUID", property = "roomguid", jdbcType = JdbcType.CHAR, id = true),
			@Result(column = "BUGUID", property = "buguid", jdbcType = JdbcType.CHAR),
			@Result(column = "ProjGUID", property = "projguid", jdbcType = JdbcType.CHAR),
			@Result(column = "BldGUID", property = "bldguid", jdbcType = JdbcType.CHAR),
			@Result(column = "MainRoomGUID", property = "mainroomguid", jdbcType = JdbcType.CHAR),
			@Result(column = "Unit", property = "unit", jdbcType = JdbcType.VARCHAR),
			@Result(column = "Floor", property = "floor", jdbcType = JdbcType.VARCHAR),
			@Result(column = "No", property = "no", jdbcType = JdbcType.VARCHAR),
			@Result(column = "Room", property = "room", jdbcType = JdbcType.VARCHAR),
			@Result(column = "RoomCode", property = "roomcode", jdbcType = JdbcType.VARCHAR),
			@Result(column = "HuXing", property = "huxing", jdbcType = JdbcType.VARCHAR),
			@Result(column = "Status", property = "status", jdbcType = JdbcType.VARCHAR),
			@Result(column = "IsVirtualRoom", property = "isvirtualroom", jdbcType = JdbcType.TINYINT),
			@Result(column = "BldArea", property = "bldarea", jdbcType = JdbcType.DECIMAL),
			@Result(column = "TnArea", property = "tnarea", jdbcType = JdbcType.DECIMAL),
			@Result(column = "BlRhDate", property = "blrhdate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "RHBLZT", property = "rhblzt", jdbcType = JdbcType.VARCHAR),
			@Result(column = "YFBZ", property = "yfbz", jdbcType = JdbcType.VARCHAR),
			@Result(column = "XPos", property = "xpos", jdbcType = JdbcType.INTEGER),
			@Result(column = "YPos", property = "ypos", jdbcType = JdbcType.INTEGER),
			@Result(column = "ZxBz", property = "zxbz", jdbcType = JdbcType.VARCHAR),
			@Result(column = "Price", property = "price", jdbcType = JdbcType.DECIMAL),
			@Result(column = "TnPrice", property = "tnprice", jdbcType = JdbcType.DECIMAL),
			@Result(column = "Total", property = "total", jdbcType = JdbcType.DECIMAL),
			@Result(column = "ZxPrice", property = "zxprice", jdbcType = JdbcType.DECIMAL),
			@Result(column = "ZxTotal", property = "zxtotal", jdbcType = JdbcType.DECIMAL),
			@Result(column = "IsTempletRoom", property = "istempletroom", jdbcType = JdbcType.TINYINT),
			@Result(column = "Locker", property = "locker", jdbcType = JdbcType.VARCHAR),
			@Result(column = "LockTime", property = "locktime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "TfDate", property = "tfdate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "DjArea", property = "djarea", jdbcType = JdbcType.VARCHAR),
			@Result(column = "IsAreaModify", property = "isareamodify", jdbcType = JdbcType.TINYINT),
			@Result(column = "VirtualStatus", property = "virtualstatus", jdbcType = JdbcType.VARCHAR),
			@Result(column = "RHDate", property = "rhdate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "JFRQ", property = "jfrq", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "XkRow", property = "xkrow", jdbcType = JdbcType.VARCHAR),
			@Result(column = "XkCol", property = "xkcol", jdbcType = JdbcType.VARCHAR),
			@Result(column = "AreaStatus", property = "areastatus", jdbcType = JdbcType.VARCHAR),
			@Result(column = "West", property = "west", jdbcType = JdbcType.VARCHAR),
			@Result(column = "AreaChangingGUID", property = "areachangingguid", jdbcType = JdbcType.CHAR),
			@Result(column = "ImportDate", property = "importdate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "ChooseRoom", property = "chooseroom", jdbcType = JdbcType.TINYINT),
			@Result(column = "CstName", property = "cstname", jdbcType = JdbcType.VARCHAR),
			@Result(column = "CstGUIDList", property = "cstguidlist", jdbcType = JdbcType.VARCHAR),
			@Result(column = "ChooseRoomCstName", property = "chooseroomcstname", jdbcType = JdbcType.VARCHAR),
			@Result(column = "ChooseRoomDate", property = "chooseroomdate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "Jbr", property = "jbr", jdbcType = JdbcType.VARCHAR),
			@Result(column = "isAnnexe", property = "isannexe", jdbcType = JdbcType.TINYINT),
			@Result(column = "Sight", property = "sight", jdbcType = JdbcType.VARCHAR),
			@Result(column = "RoomStru", property = "roomstru", jdbcType = JdbcType.VARCHAR),
			@Result(column = "AbsolutelyFloor", property = "absolutelyfloor", jdbcType = JdbcType.VARCHAR),
			@Result(column = "StatusChgGUID", property = "statuschgguid", jdbcType = JdbcType.CHAR),
			@Result(column = "SaleRentable", property = "salerentable", jdbcType = JdbcType.VARCHAR),
			@Result(column = "RentPrice", property = "rentprice", jdbcType = JdbcType.DECIMAL),
			@Result(column = "CalcRentMode", property = "calcrentmode", jdbcType = JdbcType.VARCHAR),
			@Result(column = "RentUnit", property = "rentunit", jdbcType = JdbcType.VARCHAR),
			@Result(column = "Bz", property = "bz", jdbcType = JdbcType.VARCHAR),
			@Result(column = "RentStatus", property = "rentstatus", jdbcType = JdbcType.VARCHAR),
			@Result(column = "ContinueRentStatus", property = "continuerentstatus", jdbcType = JdbcType.VARCHAR),
			@Result(column = "NextRentStatus", property = "nextrentstatus", jdbcType = JdbcType.VARCHAR),
			@Result(column = "RentName", property = "rentname", jdbcType = JdbcType.VARCHAR),
			@Result(column = "RentGUIDList", property = "rentguidlist", jdbcType = JdbcType.VARCHAR),
			@Result(column = "RentStatusChgGUID", property = "rentstatuschgguid", jdbcType = JdbcType.CHAR),
			@Result(column = "RentLocker", property = "rentlocker", jdbcType = JdbcType.VARCHAR),
			@Result(column = "RentLockTime", property = "rentlocktime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "RentAmount", property = "rentamount", jdbcType = JdbcType.DECIMAL),
			@Result(column = "BProductTypeCode", property = "bproducttypecode", jdbcType = JdbcType.VARCHAR),
			@Result(column = "YsBldArea", property = "ysbldarea", jdbcType = JdbcType.DECIMAL),
			@Result(column = "YsTnArea", property = "ystnarea", jdbcType = JdbcType.DECIMAL),
			@Result(column = "ScBldArea", property = "scbldarea", jdbcType = JdbcType.DECIMAL),
			@Result(column = "ScTnArea", property = "sctnarea", jdbcType = JdbcType.DECIMAL),
			@Result(column = "ChooseRoomNo", property = "chooseroomno", jdbcType = JdbcType.INTEGER),
			@Result(column = "ImportData_SP5", property = "importdataSp5", jdbcType = JdbcType.VARCHAR),
			@Result(column = "FloorNo", property = "floorno", jdbcType = JdbcType.INTEGER),
			@Result(column = "UnitNo", property = "unitno", jdbcType = JdbcType.INTEGER),
			@Result(column = "SLControlDate", property = "slcontroldate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "IsHfLock", property = "ishflock", jdbcType = JdbcType.TINYINT),
			@Result(column = "PriceDj", property = "pricedj", jdbcType = JdbcType.DECIMAL),
			@Result(column = "TnPriceDj", property = "tnpricedj", jdbcType = JdbcType.DECIMAL),
			@Result(column = "TotalDj", property = "totaldj", jdbcType = JdbcType.DECIMAL),
			@Result(column = "IsDj2AreaLock", property = "isdj2arealock", jdbcType = JdbcType.TINYINT),
			@Result(column = "IsBzj2AreaLock", property = "isbzj2arealock", jdbcType = JdbcType.TINYINT),
			@Result(column = "IsDjTf", property = "isdjtf", jdbcType = JdbcType.TINYINT),
			@Result(column = "IsBzjTf", property = "isbzjtf", jdbcType = JdbcType.TINYINT),
			@Result(column = "IsDjAreaModify", property = "isdjareamodify", jdbcType = JdbcType.TINYINT),
			@Result(column = "ChooseRoomBookingGUID", property = "chooseroombookingguid", jdbcType = JdbcType.CHAR),
			@Result(column = "Visible", property = "visible", jdbcType = JdbcType.INTEGER),
			@Result(column = "isyl", property = "isyl", jdbcType = JdbcType.INTEGER),
			@Result(column = "roombz", property = "roombz", jdbcType = JdbcType.VARCHAR),
			@Result(column = "PreRoomGUID", property = "preroomguid", jdbcType = JdbcType.VARCHAR),
			@Result(column = "FloorGUID", property = "floorguid", jdbcType = JdbcType.CHAR),
			@Result(column = "UnitGUID", property = "unitguid", jdbcType = JdbcType.CHAR),
			@Result(column = "ResourcesTypeGUID", property = "resourcestypeguid", jdbcType = JdbcType.CHAR),
			@Result(column = "CurRentStatus", property = "currentstatus", jdbcType = JdbcType.TINYINT),
			@Result(column = "RoomStatus", property = "roomstatus", jdbcType = JdbcType.TINYINT),
			@Result(column = "Cg", property = "cg", jdbcType = JdbcType.VARCHAR),
			@Result(column = "Hz", property = "hz", jdbcType = JdbcType.VARCHAR),
			@Result(column = "Power", property = "power", jdbcType = JdbcType.VARCHAR),
			@Result(column = "Gas", property = "gas", jdbcType = JdbcType.VARCHAR),
			@Result(column = "Gs", property = "gs", jdbcType = JdbcType.VARCHAR),
			@Result(column = "Ps", property = "ps", jdbcType = JdbcType.VARCHAR),
			@Result(column = "Kt", property = "kt", jdbcType = JdbcType.VARCHAR),
			@Result(column = "Other", property = "other", jdbcType = JdbcType.VARCHAR),
			@Result(column = "YJQYDate", property = "yjqydate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "CreateDate", property = "createdate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "IsAlowIn", property = "isalowin", jdbcType = JdbcType.TINYINT),
			@Result(column = "Client", property = "client", jdbcType = JdbcType.VARCHAR),
			@Result(column = "EntrustDate", property = "entrustdate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "EntrustJbr", property = "entrustjbr", jdbcType = JdbcType.VARCHAR),
			@Result(column = "EntrustJbDate", property = "entrustjbdate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "EntrustEndDate", property = "entrustenddate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "Contact", property = "contact", jdbcType = JdbcType.VARCHAR),
			@Result(column = "EntrustJbrGUID", property = "entrustjbrguid", jdbcType = JdbcType.CHAR),
			@Result(column = "RoomInfo", property = "roominfo", jdbcType = JdbcType.VARCHAR),
			@Result(column = "RoomShortInfo", property = "roomshortinfo", jdbcType = JdbcType.VARCHAR),
			@Result(column = "RoomSort", property = "roomsort", jdbcType = JdbcType.VARCHAR),
			@Result(column = "RoomZlBz", property = "roomzlbz", jdbcType = JdbcType.VARCHAR),
			@Result(column = "ERPCode", property = "erpcode", jdbcType = JdbcType.VARCHAR),
			@Result(column = "IsTransferERPCode", property = "istransfererpcode", jdbcType = JdbcType.TINYINT),
			@Result(column = "ERPCodeApproveState", property = "erpcodeapprovestate", jdbcType = JdbcType.VARCHAR),
			@Result(column = "VirtualAccount", property = "virtualaccount", jdbcType = JdbcType.VARCHAR),
			@Result(column = "SaleStatus", property = "salestatus", jdbcType = JdbcType.VARCHAR),
			@Result(column = "ShortUnitNo", property = "shortunitno", jdbcType = JdbcType.VARCHAR),
			@Result(column = "ShortVirtualAccount", property = "shortvirtualaccount", jdbcType = JdbcType.VARCHAR),
			@Result(column = "RoomMemo", property = "roommemo", jdbcType = JdbcType.LONGVARCHAR),
			@Result(column = "JFMemo", property = "jfmemo", jdbcType = JdbcType.LONGVARCHAR),
			@Result(column = "ReturnMsg", property = "returnmsg", jdbcType = JdbcType.LONGVARCHAR) })
	List<PRoom> search(@Param("structure") String structure, @Param("areaFrom") String areaFrom,
			@Param("areaTo") String areaTo, @Param("priceFrom") String priceFrom, @Param("priceTo") String priceTo,
			@Param("totalPriceFrom") String totalPriceFrom, @Param("totalPriceTo") String totalPriceTo);
}
